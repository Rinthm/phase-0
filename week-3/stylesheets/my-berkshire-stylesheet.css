html {
  color: #000080;
  background-color: #ffffff;
}

header {
    text-align: center;
    font-weight: bold;
    font-family: cursive;
    border-bottom: 1px solid black;
    padding: 1em;
}

#face {
  margin: auto;
  display: block;
}

.big {
    font-size: 25px;
}

.small {
    font-size: 15px;
}

.teenie {
    font-size: 10px;
    display: block;
}

li {
  padding: 1em;
}

a {
  color: #800080;
}

a:visited {
  color: #ff0000;
}

#div-1 {
  float: left;
  width: 45%;
  margin-left: 2%;
}

#div-2 {
  float: right;
  width: 45%;
}

#geico {
  text-align: center;
  font-size: 10px;
  border-top: 1px solid black;
  border-bottom: 1px solid black;
  padding: 1em;
  display: block;
}

#quote {
  display: block;
}

.comments {
  padding: 1em;
  border-bottom: 1px solid black;
  font-size: 12px;
}

footer {
  bottom: 0;
  clear: both;
}

.legal {
  padding: 1em;
}

#boldie {
  font-weight: bold;
  font-size:  10px;
}

.weenie {
  font-size: 10px;
}

/*
1. What is important to know when linking an external file (like a stylesheet) to an HTML file?

It is important to know what type of file it is, where it is located and what it is named. 

2. What tricks did you use to help you with positioning? How hard was it to get the site as you wanted it?

We used a lot of spans and classes/ids. Then we added padding and margin values to help with positioning. 
We also changed the display type for some sections to ensure it was sitting correctly with everything else. 
It took some tinkering, but we ended up getting the site to look very close to the original with only moderate
difficulty.

3. What CSS did you use to modify the element style (like size, color, etc.)

You can see it right above this comment section; things like text-size, font-size, color, background color, 
font-weight, etc.

4. Did you modify the HTML to include classes or ids? If so, which did you choose and why? If you didn't, how 
would you know which one to add to your HTML?

We did a lot of modification to the HTML to add classes and ids. We chose both; classes for things we thought we'd
use multiple times, and ids for single instances. I think we ended up with a few too many ids, but we had been
working for a while and called it good. I would probably try to clean it up a bit if this was something I was going
to actually use in the future.

5. When you compared your site to the actual code base, which do you think had cleaner code that followed best 
practices and why?

Ours did because we did our best to keep our styling in a separate CSS file. The original site's code looked very 
messy and confusing, and all the styling was done inline in the HTML file with no CSS. TISK TISK! :)
*/